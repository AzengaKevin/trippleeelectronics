<?php

use App\Http\Controllers\Backoffice\AccountingController;
use App\Http\Controllers\Backoffice\ActivityController;
use App\Http\Controllers\Backoffice\AgreementController;
use App\Http\Controllers\Backoffice\BrandController;
use App\Http\Controllers\Backoffice\CarouselController;
use App\Http\Controllers\Backoffice\ContactController;
use App\Http\Controllers\Backoffice\ContractController;
use App\Http\Controllers\Backoffice\DashboardController;
use App\Http\Controllers\Backoffice\EmployeeController;
use App\Http\Controllers\Backoffice\EmploymentController;
use App\Http\Controllers\Backoffice\IndividualController;
use App\Http\Controllers\Backoffice\ItemCategoryController;
use App\Http\Controllers\Backoffice\ItemController;
use App\Http\Controllers\Backoffice\ItemMediaController;
use App\Http\Controllers\Backoffice\ItemVariantController;
use App\Http\Controllers\Backoffice\MediaController;
use App\Http\Controllers\Backoffice\MessageController;
use App\Http\Controllers\Backoffice\NotificationController;
use App\Http\Controllers\Backoffice\OrderController;
use App\Http\Controllers\Backoffice\OrderPaymentController;
use App\Http\Controllers\Backoffice\OrganizationCategoryController;
use App\Http\Controllers\Backoffice\OrganizationController;
use App\Http\Controllers\Backoffice\PaymentController;
use App\Http\Controllers\Backoffice\PaymentMethodController;
use App\Http\Controllers\Backoffice\PermissionController;
use App\Http\Controllers\Backoffice\POSController;
use App\Http\Controllers\Backoffice\POSStoreController;
use App\Http\Controllers\Backoffice\PurchaseController;
use App\Http\Controllers\Backoffice\QuotationController;
use App\Http\Controllers\Backoffice\ReportController;
use App\Http\Controllers\Backoffice\ResourceController;
use App\Http\Controllers\Backoffice\RoleController;
use App\Http\Controllers\Backoffice\ServiceController;
use App\Http\Controllers\Backoffice\SettingsController;
use App\Http\Controllers\Backoffice\StockLevelController;
use App\Http\Controllers\Backoffice\StockMovementController;
use App\Http\Controllers\Backoffice\StoreController;
use App\Http\Controllers\Backoffice\SuspensionController;
use App\Http\Controllers\Backoffice\TaxController;
use App\Http\Controllers\Backoffice\TransactionController;
use App\Http\Controllers\Backoffice\UserController;
use App\Http\Controllers\PurchasePaymentController;
use Illuminate\Support\Facades\Route;

Route::get('/', DashboardController::class)->name('dashboard');
Route::get('/pos', [POSController::class, 'show'])->middleware(['can:access-pos'])->name('pos');
Route::post('/pos', [POSController::class, 'process'])->middleware(['can:access-pos'])->name('pos');
Route::post('/pos/store/update', [POSStoreController::class, 'update'])->middleware(['can:access-pos'])->name('pos.store.update');

Route::get('/users', [UserController::class, 'index'])->middleware(['can:browse-users'])->name('users.index');
Route::post('/users', [UserController::class, 'store'])->middleware(['can:create-users'])->name('users.store');
Route::get('/users/create', [UserController::class, 'create'])->middleware(['can:create-users'])->name('users.create');
Route::get('/users/export', [UserController::class, 'export'])->middleware(['can:export-users'])->name('users.export');
Route::get('/users/import', [UserController::class, 'import'])->middleware(['can:import-users'])->name('users.import');
Route::post('/users/import', [UserController::class, 'processImport'])->middleware(['can:import-users'])->name('users.import');
Route::get('/users/{user}', [UserController::class, 'show'])->middleware(['can:browse-users'])->name('users.show');
Route::get('/users/{user}/edit', [UserController::class, 'edit'])->middleware(['can:update-users'])->name('users.edit');
Route::put('/users/{user}', [UserController::class, 'update'])->middleware(['can:update-users'])->name('users.update');
Route::patch('/users/{user}', [UserController::class, 'update'])->middleware(['can:update-users'])->name('users.update');
Route::patch('/users/{user}/password', [UserController::class, 'updatePassword'])->middleware(['can:update-users'])->name('users.update-password');
Route::delete('/users/{user}', [UserController::class, 'destroy'])->middleware(['can:delete-users'])->name('users.destroy');

Route::get('/item-categories', [ItemCategoryController::class, 'index'])->middleware(['can:browse-item-categories'])->name('item-categories.index');
Route::post('/item-categories', [ItemCategoryController::class, 'store'])->middleware(['can:browse-item-categories'])->name('item-categories.store');
Route::get('/items-categories/export', [ItemCategoryController::class, 'export'])->middleware(['can:browse-item-categories'])->name('item-categories.export');
Route::get('/items-categories/import', [ItemCategoryController::class, 'import'])->middleware(['can:browse-item-categories'])->name('item-categories.import');
Route::post('/items-categories/import', [ItemCategoryController::class, 'processImport'])->middleware(['can:browse-item-categories'])->name('item-categories.import');
Route::get('/item-categories/create', [ItemCategoryController::class, 'create'])->middleware(['can:browse-item-categories'])->name('item-categories.create');
Route::get('/item-categories/{category}', [ItemCategoryController::class, 'show'])->middleware(['can:browse-item-categories'])->name('item-categories.show');
Route::get('/item-categories/{category}/edit', [ItemCategoryController::class, 'edit'])->middleware(['can:browse-item-categories'])->name('item-categories.edit');
Route::put('/item-categories/{category}', [ItemCategoryController::class, 'update'])->middleware(['can:browse-item-categories'])->name('item-categories.update');
Route::patch('/item-categories/{category}', [ItemCategoryController::class, 'update'])->middleware(['can:browse-item-categories'])->name('item-categories.update');
Route::delete('/item-categories/{category}', [ItemCategoryController::class, 'destroy'])->middleware(['can:browse-item-categories'])->name('item-categories.destroy');

Route::get('/brands', [BrandController::class, 'index'])->middleware(['can:browse-brands'])->name('brands.index');
Route::post('/brands', [BrandController::class, 'store'])->middleware(['can:create-brands'])->name('brands.store');
Route::get('/brands/create', [BrandController::class, 'create'])->middleware(['can:create-brands'])->name('brands.create');
Route::get('/brands/export', [BrandController::class, 'export'])->middleware(['can:export-brands'])->name('brands.export');
Route::get('/brands/import', [BrandController::class, 'import'])->middleware(['can:import-brands'])->name('brands.import');
Route::post('/brands/import', [BrandController::class, 'processImport'])->middleware(['can:import-brands'])->name('brands.import');
Route::get('/brands/{brand}', [BrandController::class, 'show'])->middleware(['can:browse-brands'])->name('brands.show');
Route::get('/brands/{brand}/edit', [BrandController::class, 'edit'])->middleware(['can:update-brands'])->name('brands.edit');
Route::put('/brands/{brand}', [BrandController::class, 'update'])->middleware(['can:update-brands'])->name('brands.update');
Route::patch('/brands/{brand}', [BrandController::class, 'update'])->middleware(['can:update-brands'])->name('brands.update');
Route::delete('/brands/{brand}', [BrandController::class, 'destroy'])->middleware(['can:delete-brands'])->name('brands.destroy');

Route::get('/services', [ServiceController::class, 'index'])->middleware(['can:browse-services'])->name('services.index');
Route::post('/services', [ServiceController::class, 'store'])->middleware(['can:create-services'])->name('services.store');
Route::get('/services/create', [ServiceController::class, 'create'])->middleware(['can:create-services'])->name('services.create');
Route::get('/services/export', [ServiceController::class, 'export'])->middleware(['can:export-services'])->name('services.export');
Route::get('/services/import', [ServiceController::class, 'import'])->middleware(['can:import-services'])->name('services.import');
Route::post('/services/import', [ServiceController::class, 'processImport'])->middleware(['can:import-services'])->name('services.import');
Route::get('/services/{service}', [ServiceController::class, 'show'])->middleware(['can:browse-services'])->name('services.show');
Route::get('/services/{service}/edit', [ServiceController::class, 'edit'])->middleware(['can:update-services'])->name('services.edit');
Route::put('/services/{service}', [ServiceController::class, 'update'])->middleware(['can:update-services'])->name('services.update');
Route::patch('/services/{service}', [ServiceController::class, 'update'])->middleware(['can:update-services'])->name('services.update');
Route::delete('/services/{service}', [ServiceController::class, 'destroy'])->middleware(['can:delete-services'])->name('services.destroy');

Route::get('/stores', [StoreController::class, 'index'])->middleware(['can:browse-stores'])->name('stores.index');
Route::post('/stores', [StoreController::class, 'store'])->middleware(['can:browse-stores'])->name('stores.store');
Route::get('/stores/create', [StoreController::class, 'create'])->middleware(['can:browse-stores'])->name('stores.create');
Route::get('/stores/export', [StoreController::class, 'export'])->middleware(['can:browse-stores'])->name('stores.export');
Route::get('/stores/import', [StoreController::class, 'import'])->middleware(['can:browse-stores'])->name('stores.import');
Route::post('/stores/import', [StoreController::class, 'processImport'])->middleware(['can:browse-stores'])->name('stores.import');
Route::get('/stores/{store}', [StoreController::class, 'show'])->middleware(['can:browse-stores'])->name('stores.show');
Route::get('/stores/{store}/edit', [StoreController::class, 'edit'])->middleware(['can:browse-stores'])->name('stores.edit');
Route::put('/stores/{store}', [StoreController::class, 'update'])->middleware(['can:browse-stores'])->name('stores.update');
Route::patch('/stores/{store}', [StoreController::class, 'update'])->middleware(['can:browse-stores'])->name('stores.update');
Route::delete('/stores/{store}', [StoreController::class, 'destroy'])->middleware(['can:browse-stores'])->name('stores.destroy');

Route::get('/items', [ItemController::class, 'index'])->middleware(['can:browse-items'])->name('items.index');
Route::post('/items', [ItemController::class, 'store'])->middleware(['can:create-items'])->name('items.store');
Route::get('/items/create', [ItemController::class, 'create'])->middleware(['can:create-items'])->name('items.create');
Route::get('/items/export', [ItemController::class, 'export'])->middleware(['can:export-items'])->name('items.export');
Route::get('/items/import', [ItemController::class, 'import'])->middleware(['can:import-items'])->name('items.import');
Route::post('/items/import', [ItemController::class, 'processImport'])->middleware(['can:import-items'])->name('items.import');
Route::get('/items/{item}', [ItemController::class, 'show'])->middleware(['can:browse-items'])->name('items.show');
Route::get('/items/{item}/media', [ItemMediaController::class, 'index'])->middleware(['can:browse-items'])->name('items.media.index');
Route::delete('/items/{item}/media/{media}', [ItemMediaController::class, 'destroy'])->middleware(['can:browse-items'])->name('items.media.destroy');
Route::get('/items/{item}/edit', [ItemController::class, 'edit'])->middleware(['can:update-items'])->name('items.edit');
Route::put('/items/{item}', [ItemController::class, 'update'])->middleware(['can:update-items'])->name('items.update');
Route::patch('/items/{item}', [ItemController::class, 'update'])->middleware(['can:update-items'])->name('items.update');
Route::delete('/items/{item}', [ItemController::class, 'destroy'])->middleware(['can:delete-items'])->name('items.destroy');

Route::get('/item-variants', [ItemVariantController::class, 'index'])->middleware(['can:browse-item-variants'])->name('item-variants.index');
Route::post('/item-variants', [ItemVariantController::class, 'store'])->middleware(['can:create-item-variants'])->name('item-variants.store');
Route::get('/item-variants/create', [ItemVariantController::class, 'create'])->middleware(['can:create-item-variants'])->name('item-variants.create');
Route::get('/item-variants/export', [ItemVariantController::class, 'export'])->middleware(['can:export-item-variants'])->name('item-variants.export');
Route::get('/item-variants/import', [ItemVariantController::class, 'import'])->middleware(['can:import-item-variants'])->name('item-variants.import');
Route::post('/item-variants/import', [ItemVariantController::class, 'processImport'])->middleware(['can:import-item-variants'])->name('item-variants.import');
Route::get('/item-variants/{itemVariant}', [ItemVariantController::class, 'show'])->middleware(['can:browse-item-variants'])->name('item-variants.show');
Route::get('/item-variants/{itemVariant}/edit', [ItemVariantController::class, 'edit'])->middleware(['can:update-item-variants'])->name('item-variants.edit');
Route::put('/item-variants/{itemVariant}', [ItemVariantController::class, 'update'])->middleware(['can:update-item-variants'])->name('item-variants.update');
Route::patch('/item-variants/{itemVariant}', [ItemVariantController::class, 'update'])->middleware(['can:update-item-variants'])->name('item-variants.update');
Route::delete('/item-variants/{itemVariant}', [ItemVariantController::class, 'destroy'])->middleware(['can:delete-item-variants'])->name('item-variants.destroy');

Route::get('/individuals', [IndividualController::class, 'index'])->middleware(['can:browse-individuals'])->name('individuals.index');
Route::post('/individuals', [IndividualController::class, 'store'])->middleware(['can:create-individuals'])->name('individuals.store');
Route::get('/individuals/create', [IndividualController::class, 'create'])->middleware(['can:create-individuals'])->name('individuals.create');
Route::get('/individuals/export', [IndividualController::class, 'export'])->middleware(['can:export-individuals'])->name('individuals.export');
Route::get('/individuals/import', [IndividualController::class, 'import'])->middleware(['can:import-individuals'])->name('individuals.import');
Route::post('/individuals/import', [IndividualController::class, 'processImport'])->middleware(['can:import-individuals'])->name('individuals.import');
Route::get('/individuals/{individual}', [IndividualController::class, 'show'])->middleware(['can:browse-individuals'])->name('individuals.show');
Route::get('/individuals/{individual}/edit', [IndividualController::class, 'edit'])->middleware(['can:update-individuals'])->name('individuals.edit');
Route::put('/individuals/{individual}', [IndividualController::class, 'update'])->middleware(['can:update-individuals'])->name('individuals.update');
Route::patch('/individuals/{individual}', [IndividualController::class, 'update'])->middleware(['can:update-individuals'])->name('individuals.update');
Route::delete('/individuals/{individual}', [IndividualController::class, 'destroy'])->middleware(['can:delete-individuals'])->name('individuals.destroy');

Route::get('/stock-levels', [StockLevelController::class, 'index'])->middleware(['can:browse-stock-levels'])->name('stock-levels.index');
Route::post('/stock-levels', [StockLevelController::class, 'store'])->middleware(['can:create-stock-levels'])->name('stock-levels.store');
Route::get('/stock-levels/create', [StockLevelController::class, 'create'])->middleware(['can:create-stock-levels'])->name('stock-levels.create');
Route::get('/stock-levels/export', [StockLevelController::class, 'export'])->middleware(['can:export-stock-levels'])->name('stock-levels.export');
Route::get('/stock-levels/import', [StockLevelController::class, 'import'])->middleware(['can:import-stock-levels'])->name('stock-levels.import');
Route::post('/stock-levels/import', [StockLevelController::class, 'processImport'])->middleware(['can:import-stock-levels'])->name('stock-levels.import');
Route::get('/stock-levels/{stockLevel}', [StockLevelController::class, 'show'])->middleware(['can:browse-stock-levels'])->name('stock-levels.show');
Route::get('/stock-levels/{stockLevel}/edit', [StockLevelController::class, 'edit'])->middleware(['can:update-stock-levels'])->name('stock-levels.edit');
Route::put('/stock-levels/{stockLevel}', [StockLevelController::class, 'update'])->middleware(['can:update-stock-levels'])->name('stock-levels.update');
Route::patch('/stock-levels/{stockLevel}', [StockLevelController::class, 'update'])->middleware(['can:update-stock-levels'])->name('stock-levels.update');
Route::delete('/stock-levels/{stockLevel}', [StockLevelController::class, 'destroy'])->middleware(['can:delete-stock-levels'])->name('stock-levels.destroy');

Route::get('/stock-movements', [StockMovementController::class, 'index'])->middleware(['can:browse-stock-movements'])->name('stock-movements.index');
Route::post('/stock-movements', [StockMovementController::class, 'store'])->middleware(['can:create-stock-movements'])->name('stock-movements.store');
Route::get('/stock-movements/create', [StockMovementController::class, 'create'])->middleware(['can:create-stock-movements'])->name('stock-movements.create');
Route::get('/stock-movements/export', [StockMovementController::class, 'export'])->middleware(['can:export-stock-movements'])->name('stock-movements.export');
Route::get('/stock-movements/import', [StockMovementController::class, 'import'])->middleware(['can:import-stock-movements'])->name('stock-movements.import');
Route::post('/stock-movements/transfer', [StockMovementController::class, 'transfer'])->middleware(['can:transfer-stock'])->name('stock-movements.transfer');
Route::post('/stock-movements/import', [StockMovementController::class, 'processImport'])->middleware(['can:import-stock-movements'])->name('stock-movements.import');
Route::get('/stock-movements/initial-items-stock', [StockMovementController::class, 'initialItemsStock'])->middleware(['can:browse-stock-movements'])->name('stock-movements.initial-items-stock');
Route::get('/stock-movements/initial-items-stock/export', [StockMovementController::class, 'exportInitialItemsStock'])->middleware(['can:export-stock-movements'])->name('stock-movements.initial-items-stock.export');
Route::post('/stock-movements/initial-items-stock/import', [StockMovementController::class, 'importInitialItemsStock'])->middleware(['can:import-stock-movements'])->name('stock-movements.initial-items-stock.import');
Route::get('/stock-movements/{stockMovement}', [StockMovementController::class, 'show'])->middleware(['can:browse-stock-movements'])->name('stock-movements.show');
Route::get('/stock-movements/{stockMovement}/edit', [StockMovementController::class, 'edit'])->middleware(['can:update-stock-movements'])->name('stock-movements.edit');
Route::put('/stock-movements/{stockMovement}', [StockMovementController::class, 'update'])->middleware(['can:update-stock-movements'])->name('stock-movements.update');
Route::patch('/stock-movements/{stockMovement}', [StockMovementController::class, 'update'])->middleware(['can:update-stock-movements'])->name('stock-movements.update');
Route::delete('/stock-movements/{stockMovement}', [StockMovementController::class, 'destroy'])->middleware(['can:delete-stock-movements'])->name('stock-movements.destroy');

Route::get('/purchases', [PurchaseController::class, 'index'])->middleware(['can:browse-purchases'])->name('purchases.index');
Route::post('/purchases', [PurchaseController::class, 'store'])->middleware(['can:create-purchases'])->name('purchases.store');
Route::get('/purchases/create', [PurchaseController::class, 'create'])->middleware(['can:create-purchases'])->name('purchases.create');
Route::get('/purchases/export', [PurchaseController::class, 'export'])->middleware(['can:export-purchases'])->name('purchases.export');
Route::get('/purchases/import', [PurchaseController::class, 'import'])->middleware(['can:import-purchases'])->name('purchases.import');
Route::post('/purchases/import', [PurchaseController::class, 'processImport'])->middleware(['can:import-purchases'])->name('purchases.import');
Route::get('/purchases/{purchase}', [PurchaseController::class, 'show'])->middleware(['can:browse-purchases'])->name('purchases.show');
Route::get('/purchases/{purchase}/edit', [PurchaseController::class, 'edit'])->middleware(['can:update-purchases'])->name('purchases.edit');
Route::post('/purchases/{purchase}/payments', [PurchasePaymentController::class, 'store'])->middleware('can:browse-purchases', 'can:create-payments')->name('purchases.payments.store');
Route::put('/purchases/{purchase}', [PurchaseController::class, 'update'])->middleware(['can:update-purchases'])->name('purchases.update');
Route::patch('/purchases/{purchase}', [PurchaseController::class, 'update'])->middleware(['can:update-purchases'])->name('purchases.update');
Route::delete('/purchases/{purchase}', [PurchaseController::class, 'destroy'])->middleware(['can:delete-purchases'])->name('purchases.destroy');

Route::get('/orders', [OrderController::class, 'index'])->middleware(['can:browse-orders'])->name('orders.index');
Route::post('/orders', [OrderController::class, 'store'])->middleware(['can:create-orders'])->name('orders.store');
Route::get('/orders/create', [OrderController::class, 'create'])->middleware(['can:create-orders'])->name('orders.create');
Route::get('/orders/export', [OrderController::class, 'export'])->middleware(['can:export-orders'])->name('orders.export');
Route::get('/orders/import', [OrderController::class, 'import'])->middleware(['can:import-orders'])->name('orders.import');
Route::post('/orders/import', [OrderController::class, 'processImport'])->middleware(['can:import-orders'])->name('orders.import');
Route::get('/orders/reports', [OrderController::class, 'reports'])->middleware(['can:browse-orders'])->name('orders.reports');
Route::get('/orders/reports/detailed-report', [OrderController::class, 'detailedReport'])->middleware(['can:export-orders'])->name('orders.reports.detailed-report');
Route::get('/orders/{order}', [OrderController::class, 'show'])->middleware(['can:browse-orders'])->name('orders.show');
Route::get('/orders/{order}/payments', [OrderPaymentController::class, 'index'])->middleware(['can:browse-orders'])->name('orders.payments.index');
Route::post('/orders/{order}/payments', [OrderPaymentController::class, 'store'])->middleware('can:browse-orders', 'can:create-payments')->name('orders.payments.store');
Route::get('/orders/{order}/edit', [OrderController::class, 'edit'])->middleware(['can:update-orders'])->name('orders.edit');
Route::get('/orders/{order}/invoice', [OrderController::class, 'invoice'])->middleware(['can:browse-orders'])->name('orders.invoice');
Route::get('/orders/{order}/receipt', [OrderController::class, 'receipt'])->middleware(['can:browse-orders'])->name('orders.receipt');
Route::patch('/orders/{order}/mark-complete', [OrderController::class, 'markComplete'])->middleware(['can:update-orders'])->name('orders.mark-complete');
Route::put('/orders/{order}', [OrderController::class, 'update'])->middleware(['can:update-orders'])->name('orders.update');
Route::patch('/orders/{order}', [OrderController::class, 'partialUpdate'])->middleware(['can:update-orders'])->name('orders.update');
Route::delete('/orders/{order}', [OrderController::class, 'destroy'])->middleware(['can:delete-orders'])->name('orders.destroy');

Route::get('quotations', [QuotationController::class, 'index'])->middleware(['can:browse-quotations'])->name('quotations.index');
Route::post('quotations', [QuotationController::class, 'store'])->middleware(['can:create-quotations'])->name('quotations.store');
Route::get('quotations/create', [QuotationController::class, 'create'])->middleware(['can:create-quotations'])->name('quotations.create');
Route::get('quotations/export', [QuotationController::class, 'export'])->middleware(['can:export-quotations'])->name('quotations.export');
Route::get('quotations/import', [QuotationController::class, 'import'])->middleware(['can:import-quotations'])->name('quotations.import');
Route::post('quotations/import', [QuotationController::class, 'processImport'])->middleware(['can:import-quotations'])->name('quotations.import');
Route::get('quotations/{quotation}', [QuotationController::class, 'show'])->middleware(['can:browse-quotations'])->name('quotations.show');
Route::get('quotations/{quotation}/edit', [QuotationController::class, 'edit'])->middleware(['can:update-quotations'])->name('quotations.edit');
Route::get('quotations/{quotation}/print', [QuotationController::class, 'print'])->middleware(['can:browse-quotations'])->name('quotations.print');
Route::put('quotations/{quotation}', [QuotationController::class, 'update'])->middleware(['can:update-quotations'])->name('quotations.update');
Route::patch('quotations/{quotation}', [QuotationController::class, 'update'])->middleware(['can:update-quotations'])->name('quotations.update');
Route::delete('quotations/{quotation}', [QuotationController::class, 'destroy'])->middleware(['can:delete-quotations'])->name('quotations.destroy');

Route::get('/permissions', [PermissionController::class, 'index'])->middleware(['can:browse-permissions'])->name('permissions.index');
Route::post('/permissions', [PermissionController::class, 'store'])->middleware(['can:create-permissions'])->name('permissions.store');
Route::get('/permissions/create', [PermissionController::class, 'create'])->middleware(['can:create-permissions'])->name('permissions.create');
Route::get('/permissions/export', [PermissionController::class, 'export'])->middleware(['can:export-permissions'])->name('permissions.export');
Route::get('/permissions/import', [PermissionController::class, 'import'])->middleware(['can:import-permissions'])->name('permissions.import');
Route::post('/permissions/import', [PermissionController::class, 'processImport'])->middleware(['can:import-permissions'])->name('permissions.import');
Route::get('/permissions/{permission}', [PermissionController::class, 'show'])->middleware(['can:browse-permissions'])->name('permissions.show');
Route::get('/permissions/{permission}/edit', [PermissionController::class, 'edit'])->middleware(['can:update-permissions'])->name('permissions.edit');
Route::put('/permissions/{permission}', [PermissionController::class, 'update'])->middleware(['can:update-permissions'])->name('permissions.update');
Route::patch('/permissions/{permission}', [PermissionController::class, 'update'])->middleware(['can:update-permissions'])->name('permissions.update');
Route::delete('/permissions/{permission}', [PermissionController::class, 'destroy'])->middleware(['can:delete-permissions'])->name('permissions.destroy');

Route::get('/roles', [RoleController::class, 'index'])->middleware(['can:browse-roles'])->name('roles.index');
Route::post('/roles', [RoleController::class, 'store'])->middleware(['can:create-roles'])->name('roles.store');
Route::get('/roles/create', [RoleController::class, 'create'])->middleware(['can:create-roles'])->name('roles.create');
Route::get('/roles/export', [RoleController::class, 'export'])->middleware(['can:export-roles'])->name('roles.export');
Route::get('/roles/import', [RoleController::class, 'import'])->middleware(['can:import-roles'])->name('roles.import');
Route::post('/roles/import', [RoleController::class, 'processImport'])->middleware(['can:import-roles'])->name('roles.import');
Route::get('/roles/{role}', [RoleController::class, 'show'])->middleware(['can:browse-roles'])->name('roles.show');
Route::get('/roles/{role}/edit', [RoleController::class, 'edit'])->middleware(['can:update-roles'])->name('roles.edit');
Route::put('/roles/{role}', [RoleController::class, 'update'])->middleware(['can:update-roles'])->name('roles.update');
Route::patch('/roles/{role}', [RoleController::class, 'update'])->middleware(['can:update-roles'])->name('roles.update');
Route::delete('/roles/{role}', [RoleController::class, 'destroy'])->middleware(['can:delete-roles'])->name('roles.destroy');

Route::get('/resources', [ResourceController::class, 'index'])->middleware(['can:browse-resources'])->name('resources.index');
Route::post('/resources', [ResourceController::class, 'store'])->middleware(['can:create-resources'])->name('resources.store');
Route::get('/resources/create', [ResourceController::class, 'create'])->middleware(['can:create-resources'])->name('resources.create');
Route::get('/resources/export', [ResourceController::class, 'export'])->middleware(['can:export-resources'])->name('resources.export');
Route::get('/resources/import', [ResourceController::class, 'import'])->middleware(['can:import-resources'])->name('resources.import');
Route::post('/resources/import', [ResourceController::class, 'processImport'])->middleware(['can:import-resources'])->name('resources.import');
Route::get('/resources/{resource}', [ResourceController::class, 'show'])->middleware(['can:browse-resources'])->name('resources.show');
Route::get('/resources/{resource}/edit', [ResourceController::class, 'edit'])->middleware(['can:update-resources'])->name('resources.edit');
Route::put('/resources/{resource}', [ResourceController::class, 'update'])->middleware(['can:update-resources'])->name('resources.update');
Route::patch('/resources/{resource}', [ResourceController::class, 'update'])->middleware(['can:update-resources'])->name('resources.update');
Route::delete('/resources/{resource}', [ResourceController::class, 'destroy'])->middleware(['can:delete-resources'])->name('resources.destroy');

Route::get('/organization-categories', [OrganizationCategoryController::class, 'index'])->middleware(['can:browse-organization-categories'])->name('organization-categories.index');
Route::post('/organization-categories', [OrganizationCategoryController::class, 'store'])->middleware(['can:create-organization-categories'])->name('organization-categories.store');
Route::get('/organization-categories/create', [OrganizationCategoryController::class, 'create'])->middleware(['can:create-organization-categories'])->name('organization-categories.create');
Route::get('/organization-categories/export', [OrganizationCategoryController::class, 'export'])->middleware(['can:export-organization-categories'])->name('organization-categories.export');
Route::get('/organization-categories/import', [OrganizationCategoryController::class, 'import'])->middleware(['can:import-organization-categories'])->name('organization-categories.import');
Route::post('/organization-categories/import', [OrganizationCategoryController::class, 'processImport'])->middleware(['can:import-organization-categories'])->name('organization-categories.import');
Route::get('/organization-categories/{category}', [OrganizationCategoryController::class, 'show'])->middleware(['can:browse-organization-categories'])->name('organization-categories.show');
Route::get('/organization-categories/{category}/edit', [OrganizationCategoryController::class, 'edit'])->middleware(['can:update-organization-categories'])->name('organization-categories.edit');
Route::put('/organization-categories/{category}', [OrganizationCategoryController::class, 'update'])->middleware(['can:update-organization-categories'])->name('organization-categories.update');
Route::patch('/organization-categories/{category}', [OrganizationCategoryController::class, 'update'])->middleware(['can:update-organization-categories'])->name('organization-categories.update');
Route::delete('/organization-categories/{category}', [OrganizationCategoryController::class, 'destroy'])->middleware(['can:delete-organization-categories'])->name('organization-categories.destroy');

Route::get('/organizations', [OrganizationController::class, 'index'])->middleware(['can:browse-organizations'])->name('organizations.index');
Route::post('/organizations', [OrganizationController::class, 'store'])->middleware(['can:create-organizations'])->name('organizations.store');
Route::get('/organizations/create', [OrganizationController::class, 'create'])->middleware(['can:create-organizations'])->name('organizations.create');
Route::get('/organizations/export', [OrganizationController::class, 'export'])->middleware(['can:export-organizations'])->name('organizations.export');
Route::get('/organizations/import', [OrganizationController::class, 'import'])->middleware(['can:import-organizations'])->name('organizations.import');
Route::post('/organizations/import', [OrganizationController::class, 'processImport'])->middleware(['can:import-organizations'])->name('organizations.import');
Route::get('/organizations/{organization}', [OrganizationController::class, 'show'])->middleware(['can:browse-organizations'])->name('organizations.show');
Route::get('/organizations/{organization}/edit', [OrganizationController::class, 'edit'])->middleware(['can:update-organizations'])->name('organizations.edit');
Route::put('/organizations/{organization}', [OrganizationController::class, 'update'])->middleware(['can:update-organizations'])->name('organizations.update');
Route::patch('/organizations/{organization}', [OrganizationController::class, 'update'])->middleware(['can:update-organizations'])->name('organizations.update');
Route::delete('/organizations/{organization}', [OrganizationController::class, 'destroy'])->middleware(['can:delete-organizations'])->name('organizations.destroy');

Route::get('/carousels', [CarouselController::class, 'index'])->middleware(['can:browse-carousels'])->name('carousels.index');
Route::post('/carousels', [CarouselController::class, 'store'])->middleware(['can:create-carousels'])->name('carousels.store');
Route::get('/carousels/create', [CarouselController::class, 'create'])->middleware(['can:create-carousels'])->name('carousels.create');
Route::get('/carousels/export', [CarouselController::class, 'export'])->middleware(['can:export-carousels'])->name('carousels.export');
Route::get('/carousels/import', [CarouselController::class, 'import'])->middleware(['can:import-carousels'])->name('carousels.import');
Route::post('/carousels/import', [CarouselController::class, 'processImport'])->middleware(['can:import-carousels'])->name('carousels.import');
Route::get('/carousels/{carousel}', [CarouselController::class, 'show'])->middleware(['can:browse-carousels'])->name('carousels.show');
Route::get('/carousels/{carousel}/edit', [CarouselController::class, 'edit'])->middleware(['can:update-carousels'])->name('carousels.edit');
Route::put('/carousels/{carousel}', [CarouselController::class, 'update'])->middleware(['can:update-carousels'])->name('carousels.update');
Route::patch('/carousels/{carousel}', [CarouselController::class, 'update'])->middleware(['can:update-carousels'])->name('carousels.update');
Route::delete('/carousels/{carousel}', [CarouselController::class, 'destroy'])->middleware(['can:delete-carousels'])->name('carousels.destroy');

Route::get('/settings', [SettingsController::class, 'show'])->middleware(['can:manage-settings'])->name('settings.show');
Route::patch('/settings', [SettingsController::class, 'update'])->middleware(['can:manage-settings'])->name('settings.update');

Route::get('/payments', [PaymentController::class, 'index'])->middleware(['can:browse-payments'])->name('payments.index');
Route::post('/payments', [PaymentController::class, 'store'])->middleware(['can:create-payments'])->name('payments.store');
Route::get('/payments/create', [PaymentController::class, 'create'])->middleware(['can:create-payments'])->name('payments.create');
Route::get('/payments/export', [PaymentController::class, 'export'])->middleware(['can:export-payments'])->name('payments.export');
Route::get('/payments/import', [PaymentController::class, 'import'])->middleware(['can:import-payments'])->name('payments.import');
Route::post('/payments/import', [PaymentController::class, 'processImport'])->middleware(['can:import-payments'])->name('payments.import');
Route::get('/payments/{payment}', [PaymentController::class, 'show'])->middleware(['can:browse-payments'])->name('payments.show');
Route::get('/payments/{payment}/edit', [PaymentController::class, 'edit'])->middleware(['can:update-payments'])->name('payments.edit');
Route::put('/payments/{payment}', [PaymentController::class, 'update'])->middleware(['can:update-payments'])->name('payments.update');
Route::patch('/payments/{payment}', [PaymentController::class, 'update'])->middleware(['can:update-payments'])->name('payments.update');
Route::delete('/payments/{payment}', [PaymentController::class, 'destroy'])->middleware(['can:delete-payments'])->name('payments.destroy');

Route::get('/transactions', [TransactionController::class, 'index'])->middleware(['can:browse-transactions'])->name('transactions.index');
Route::post('/transactions', [TransactionController::class, 'store'])->middleware(['can:create-transactions'])->name('transactions.store');
Route::get('/transactions/create', [TransactionController::class, 'create'])->middleware(['can:create-transactions'])->name('transactions.create');
Route::get('/transactions/export', [TransactionController::class, 'export'])->middleware(['can:export-transactions'])->name('transactions.export');
Route::get('/transactions/import', [TransactionController::class, 'import'])->middleware(['can:import-transactions'])->name('transactions.import');
Route::post('/transactions/import', [TransactionController::class, 'processImport'])->middleware(['can:import-transactions'])->name('transactions.import');
Route::get('/transactions/{transaction}', [TransactionController::class, 'show'])->middleware(['can:browse-transactions'])->name('transactions.show');
Route::get('/transactions/{transaction}/edit', [TransactionController::class, 'edit'])->middleware(['can:update-transactions'])->name('transactions.edit');
Route::put('/transactions/{transaction}', [TransactionController::class, 'update'])->middleware(['can:update-transactions'])->name('transactions.update');
Route::patch('/transactions/{transaction}', [TransactionController::class, 'update'])->middleware(['can:update-transactions'])->name('transactions.update');
Route::delete('/transactions/{transaction}', [TransactionController::class, 'destroy'])->middleware(['can:delete-transactions'])->name('transactions.destroy');

Route::get('/payment-methods', [PaymentMethodController::class, 'index'])->middleware(['can:browse-payment-methods'])->name('payment-methods.index');
Route::post('/payment-methods', [PaymentMethodController::class, 'store'])->middleware(['can:create-payment-methods'])->name('payment-methods.store');
Route::get('/payment-methods/create', [PaymentMethodController::class, 'create'])->middleware(['can:create-payment-methods'])->name('payment-methods.create');
Route::get('/payment-methods/export', [PaymentMethodController::class, 'export'])->middleware(['can:export-payment-methods'])->name('payment-methods.export');
Route::post('/payment-methods/import', [PaymentMethodController::class, 'import'])->middleware(['can:import-payment-methods'])->name('payment-methods.import');
Route::get('/payment-methods/{method}', [PaymentMethodController::class, 'show'])->middleware(['can:browse-payment-methods'])->name('payment-methods.show');
Route::get('/payment-methods/{method}/edit', [PaymentMethodController::class, 'edit'])->middleware(['can:update-payment-methods'])->name('payment-methods.edit');
Route::put('/payment-methods/{method}', [PaymentMethodController::class, 'update'])->middleware(['can:update-payment-methods'])->name('payment-methods.update');
Route::patch('/payment-methods/{method}', [PaymentMethodController::class, 'update'])->middleware(['can:update-payment-methods'])->name('payment-methods.update');
Route::delete('/payment-methods/{method}', [PaymentMethodController::class, 'destroy'])->middleware(['can:delete-payment-methods'])->name('payment-methods.destroy');

Route::get('/notifications', [NotificationController::class, 'index'])->name('notifications.index');
Route::patch('/notifications/{notification}/mark-as-read', [NotificationController::class, 'markAsRead'])->name('notifications.mark-as-read');
Route::delete('/notifications/{notification}', [NotificationController::class, 'destroy'])->name('notifications.destroy');

Route::get('/agreements', [AgreementController::class, 'index'])->middleware(['can:browse-agreements'])->name('agreements.index');
Route::post('/agreements', [AgreementController::class, 'store'])->middleware(['can:create-agreements'])->name('agreements.store');
Route::get('/agreements/create', [AgreementController::class, 'create'])->middleware(['can:create-agreements'])->name('agreements.create');
Route::get('/agreements/export', [AgreementController::class, 'export'])->middleware(['can:export-agreements'])->name('agreements.export');
Route::post('/agreements/import', [AgreementController::class, 'import'])->middleware(['can:import-agreements'])->name('agreements.import');
Route::get('/agreements/{agreement}', [AgreementController::class, 'show'])->middleware(['can:browse-agreements'])->name('agreements.show');
Route::get('/agreements/{agreement}/edit', [AgreementController::class, 'edit'])->middleware(['can:update-agreements'])->name('agreements.edit');
Route::get('/agreements/{agreement}/print', [AgreementController::class, 'print'])->middleware(['can:import-agreements'])->name('agreements.print');
Route::put('/agreements/{agreement}', [AgreementController::class, 'update'])->middleware(['can:update-agreements'])->name('agreements.update');
Route::patch('/agreements/{agreement}', [AgreementController::class, 'update'])->middleware(['can:update-agreements'])->name('agreements.update');
Route::delete('/agreements/{agreement}', [AgreementController::class, 'destroy'])->middleware(['can:delete-agreements'])->name('agreements.destroy');

Route::get('/contacts', [ContactController::class, 'index'])->middleware(['can:browse-contacts'])->name('contacts.index');
Route::get('/contacts/{contact}', [ContactController::class, 'show'])->middleware(['can:browse-contacts'])->name('contacts.show');
Route::delete('/contacts/{contact}', [ContactController::class, 'destroy'])->middleware(['can:delete-contacts'])->name('contacts.destroy');

Route::get('/reports', [ReportController::class, 'index'])->middleware(['can:browse-reports'])->name('reports.index');
Route::get('/reports/print', [ReportController::class, 'print'])->middleware(['can:print-reports'])->name('reports.print');
Route::get('/reports/pnl', [ReportController::class, 'pnl'])->middleware(['can:browse-reports'])->name('reports.pnl');
Route::get('/reports/pnl/print', [ReportController::class, 'pnlPrint'])->middleware(['can:print-reports'])->name('reports.pnl.print');

Route::get('/activities', [ActivityController::class, 'index'])->middleware(['can:browse-activities'])->name('activities.index');
Route::get('/activities/{activity}', [ActivityController::class, 'show'])->middleware(['can:browse-activities'])->name('activities.show');
Route::delete('/activities/{activity}', [ActivityController::class, 'destroy'])->middleware(['can:delete-activities'])->name('activities.destroy');

Route::get('/messages', [MessageController::class, 'index'])->middleware(['can:browse-messages'])->name('messages.index');
Route::post('/messages', [MessageController::class, 'store'])->middleware(['can:create-messages'])->name('messages.store');
Route::get('/messages/{thread}', [MessageController::class, 'show'])->middleware(['can:browse-messages'])->name('messages.show');
Route::put('/messages/{message}/read', [MessageController::class, 'read'])->middleware(['can:browse-messages'])->name('messages.read');

Route::get('/employees', [EmployeeController::class, 'index'])->middleware(['can:browse-employees'])->name('employees.index');
Route::get('employees/{employee}', [EmployeeController::class, 'show'])->middleware(['can:browse-employees'])->name('employees.show');
Route::get('/employees/{employee}/edit', [EmployeeController::class, 'edit'])->middleware(['can:update-employees'])->name('employees.edit');
Route::put('/employees/{employee}', [EmployeeController::class, 'update'])->middleware(['can:update-employees'])->name('employees.update');
Route::post('/employees/{employee}/suspend', [EmployeeController::class, 'suspend'])->middleware(['can:update-employees'])->name('employees.suspend');
Route::patch('/employees/{employee}', [EmployeeController::class, 'update'])->middleware(['can:update-employees'])->name('employees.update');
Route::delete('/employees/{employee}', [EmployeeController::class, 'destroy'])->middleware(['can:delete-employees'])->name('employees.destroy');

Route::get('/employment', [EmploymentController::class, 'show'])->middleware(['can:read-employment'])->name('employment.show');
Route::get('/employment/edit', [EmploymentController::class, 'edit'])->middleware(['can:update-employment'])->name('employment.edit');
Route::patch('/employment', [EmploymentController::class, 'update'])->middleware(['can:update-employment'])->name('employment.update');
Route::put('/employment', [EmploymentController::class, 'update'])->middleware(['can:update-employment'])->name('employment.update');

Route::get('/contracts', [ContractController::class, 'index'])->name('contracts.index');
Route::post('/contracts', [ContractController::class, 'store'])->middleware(['can:create-contracts'])->name('contracts.store');
Route::get('/contracts/create', [ContractController::class, 'create'])->middleware(['can:create-contracts'])->name('contracts.create');
Route::get('/contracts/{contract}', [ContractController::class, 'show'])->middleware(['can:browse-contracts'])->name('contracts.show');
Route::get('/contracts/{contract}/edit', [ContractController::class, 'edit'])->middleware(['can:update-contracts'])->name('contracts.edit');
Route::put('/contracts/{contract}', [ContractController::class, 'update'])->middleware(['can:update-contracts'])->name('contracts.update');
Route::patch('/contracts/{contract}', [ContractController::class, 'update'])->middleware(['can:update-contracts'])->name('contracts.update');
Route::delete('/contracts/{contract}', [ContractController::class, 'destroy'])->middleware(['can:delete-contracts'])->name('contracts.destroy');

Route::get('/suspensions', [SuspensionController::class, 'index'])->name('suspensions.index');
Route::post('/suspensions', [SuspensionController::class, 'store'])->middleware(['can:create-suspensions'])->name('suspensions.store');
Route::get('/suspensions/create', [SuspensionController::class, 'create'])->middleware(['can:create-suspensions'])->name('suspensions.create');
Route::get('/suspensions/{suspension}', [SuspensionController::class, 'show'])->middleware(['can:browse-suspensions'])->name('suspensions.show');
Route::get('/suspensions/{suspension}/edit', [SuspensionController::class, 'edit'])->middleware(['can:update-suspensions'])->name('suspensions.edit');
Route::put('/suspensions/{suspension}', [SuspensionController::class, 'update'])->middleware(['can:update-suspensions'])->name('suspensions.update');
Route::patch('/suspensions/{suspension}', [SuspensionController::class, 'update'])->middleware(['can:update-suspensions'])->name('suspensions.update');
Route::delete('/suspensions/{suspension}', [SuspensionController::class, 'destroy'])->middleware(['can:delete-suspensions'])->name('suspensions.destroy');

Route::get('/media', [MediaController::class, 'index'])->middleware(['can:browse-media'])->name('media.index');
Route::post('/media', [MediaController::class, 'store'])->middleware(['can:create-media'])->name('media.store');
Route::get('/media/create', [MediaController::class, 'create'])->middleware(['can:create-media'])->name('media.create');
Route::get('/media/export', [MediaController::class, 'export'])->middleware(['can:export-media'])->name('media.export');
Route::get('/media/import', [MediaController::class, 'import'])->middleware(['can:import-media'])->name('media.import');
Route::post('/media/import', [MediaController::class, 'processImport'])->middleware(['can:import-media'])->name('media.import');
Route::get('/media/{individual}', [MediaController::class, 'show'])->middleware(['can:browse-media'])->name('media.show');
Route::get('/media/{individual}/edit', [MediaController::class, 'edit'])->middleware(['can:update-media'])->name('media.edit');
Route::put('/media/{individual}', [MediaController::class, 'update'])->middleware(['can:update-media'])->name('media.update');
Route::patch('/media/{individual}', [MediaController::class, 'update'])->middleware(['can:update-media'])->name('media.update');
Route::delete('/media/{individual}', [MediaController::class, 'destroy'])->middleware(['can:delete-media'])->name('media.destroy');

Route::get('/accounting', [AccountingController::class, 'index'])->middleware(['can:browse-accounting-periods'])->name('accounting.index');
Route::get('/accounting/{accountingPeriod}', [AccountingController::class, 'show'])->middleware(['can:browse-accounting-periods'])->name('accounting.show');

Route::get('/taxes', [TaxController::class, 'index'])->middleware(['can:browse-taxes'])->name('taxes.index');
Route::post('/taxes', [TaxController::class, 'store'])->middleware(['can:create-taxes'])->name('taxes.store');
Route::get('/taxes/create', [TaxController::class, 'create'])->middleware(['can:create-taxes'])->name('taxes.create');
Route::get('/taxes/export', [TaxController::class, 'export'])->middleware(['can:export-taxes'])->name('taxes.export');
Route::get('/taxes/import', [TaxController::class, 'import'])->middleware(['can:import-taxes'])->name('taxes.import');
Route::get('/taxes/{tax}', [TaxController::class, 'show'])->middleware(['can:browse-taxes'])->name('taxes.show');
Route::get('/taxes/{tax}/edit', [TaxController::class, 'edit'])->middleware(['can:update-taxes'])->name('taxes.edit');
Route::put('/taxes/{tax}', [TaxController::class, 'update'])->middleware(['can:update-taxes'])->name('taxes.update');
Route::patch('/taxes/{tax}', [TaxController::class, 'update'])->middleware(['can:update-taxes'])->name('taxes.update');
Route::delete('/taxes/{tax}', [TaxController::class, 'destroy'])->middleware(['can:delete-taxes'])->name('taxes.destroy');
